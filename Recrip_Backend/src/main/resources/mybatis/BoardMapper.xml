<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.recrip.mapper.BoardMapper">

	<sql id="search">
		<if test="word != null and word != ''">
			<if test="key == 'subject'">
				and subject like concat('%', #{word}, '%')
			</if>
			<if test="key != 'subject'">
				and ${key} = #{word}
			</if>
		</if>
	</sql>

	<select id="boardList" parameterType="map" resultType="boardDto">
		select *
		from ${table}
		where isdelete = false
		<include refid="search"></include>
		order by articleno desc
		limit #{start}, #{listsize}
	</select>
	
	<select id="getTotalListCount" parameterType="map" resultType="int">
		select count(articleno)
		from ${table}
		where isdelete = false
		<include refid="search"></include>
	</select>
  	
  	<insert id="freeBoardWrite" parameterType="boardDto">
  		insert into freeboard (userid, subject, content)
  		values (#{userid}, #{subject}, #{content})
  	</insert>
  	
  	<insert id="reviewBoardWrite" parameterType="boardDto">
  		insert into reviewboard (userid, subject, content, groupno)
  		values (#{userid}, #{subject}, #{content}, #{groupno})
  	</insert>
  	
  	<insert id="reviewBoardAttrWrite" parameterType="map">
  		insert into reviewboardattr (articleno, contentid, starscore)
  		values(#{articleno}, #{contentid}, #{starscore})
  	</insert>
  	
  	<select id="reviewBoardAttrList" parameterType="string" resultType="map">
  		select * from reviewboardattr where articleno = #{articleno}
  	</select>
  	
  	<update id="freeBoardDelete" parameterType="string">
  		update freeboard set isdelete = true where articleno = #{articleno}
  	</update>
  	
  	<update id="reviewBoardDelete" parameterType="string">
  		update reviewboard set isdelete = true where articleno = #{articleno}
  	</update>
  	
  	<update id="freeBoardUpdate" parameterType="boardDto">
  		update freeboard set subject = #{subject}, content = #{content} where articleno = #{articleno}
  	</update>
  	
  	<update id="reviewBoardUpdate" parameterType="boardDto">
  		update reviewboard set subject = #{subject}, content = #{content} where articleno = #{articleno}
  	</update>
  	
  	<select id="freeBoardView" parameterType="string" resultType="boardDto">
  		select * from freeboard where isdelete = false and articleno = #{articleno};
  	</select>
  	
  	<update id="freeBoardHit" parameterType="string">
  		UPDATE freeboard SET hit=hit+1 where isdelete = false and articleno = #{articleno};
  	</update>
  	
  	<update id="reviewBoardHit" parameterType="string">
  		UPDATE reviewboard SET hit=hit+1 where isdelete = false and articleno = #{articleno};
  	</update>
  	
  	<select id="freeBoardLikeCheck" parameterType="string" resultType="int">
  		select COUNT(*) from freeboardlikes where articleno = #{articleno} AND userid= #{userid};
  	</select>
  	
  	<select id="freeBoardLikeCount" parameterType="string" resultType="int">
  		select likes from freeboard where articleno = #{articleno};
  	</select>
  	
  	<select id="reviewBoardLikeCount" parameterType="string" resultType="int">
  		select likes from reviewboard where articleno = #{articleno};
  	</select>
  	
  	<select id="reviewBoardLikeCheck" parameterType="string" resultType="int">
  		select COUNT(*) from reviewboardlikes where articleno = #{articleno} AND userid= #{userid};
  	</select>
  	
  	<update id="freeBoardLike" parameterType="string">
  		UPDATE freeboard SET likes=likes+1 where isdelete = false and articleno = #{articleno};
  	</update>
  	
  	<update id="reviewBoardLike" parameterType="string">
  		UPDATE reviewboard SET likes=likes+1 where isdelete = false and articleno = #{articleno};
  	</update>
  	
  	<insert id="freeBoardLikeAdd" parameterType="string">
  		insert into freeboardlikes (articleno, userid) VALUES(${articleno},'${userid}');
  	</insert>
  	
  	<insert id="reviewBoardLikeAdd" parameterType="string">
  		insert into reviewboardlikes (articleno, userid) VALUES(${articleno},'${userid}');
  	</insert>
  	
  	<select id="reviewBoardView" parameterType="string" resultType="boardDto">
  		select * from reviewboard where isdelete = false and articleno = #{articleno}
  	</select>
  	
  	<select id="freeCommentList" parameterType="map" resultType="commentDto">
  		select * from freecomment where isdelete = false and articleno = #{articleno} AND parentcomment = #{parentcomment};
  	</select>
  	
  	<select id="reviewCommentList" parameterType="string" resultType="commentDto">
  		select * from reviewcomment where isdelete = false and articleno = #{articleno} AND parentcomment = #{parentcomment};
  	</select>
  	
  	<insert id="freeCommentWrite" parameterType="commentDto">
  		insert into freecomment (articleno, userid, content)
  		values (#{articleno}, #{userid}, #{content})
  	</insert>
  	
  	<insert id="reviewCommentWrite" parameterType="commentDto">
  		insert into reviewcomment (articleno, userid, content)
  		values (#{articleno}, #{userid}, #{content})
  	</insert>
  	
  	<update id="freeCommentDelete" parameterType="string">
  		update freecomment set isdelete = true where commentno = #{commentno}
  	</update>
  	
  	<update id="reviewCommentDelete" parameterType="string">
  		update reviewcomment set isdelete = true where commentno = #{commentno}
  	</update>
  	
  	<select id="freeBoardFileList" parameterType="string" resultType="fileDto">
  		select * from freeboardfiles where articleno = #{articleno};
  	</select>
  	
  	<select id="reviewBoardFileList" parameterType="string" resultType="fileDto">
  		select * from reviewboardfiles where articleno = #{articleno};
  	</select>
  	
  	<insert id="freeBoardFileWrite" parameterType="fileDto">
  		insert into freeboardfiles (articleno, url, filename) values (#{articleno}, #{url}, #{filename})
  	</insert>
  	
  	<insert id="reviewBoardFileWrite" parameterType="fileDto">
  		insert into reviewboardfiles (articleno, url, filename) values (#{articleno}, #{url}, #{filename})
  	</insert>
  	
  	<select id="freeBoardLastArticleno" resultType="int">
  		select articleno from freeboard order by articleno desc limit 1;
  	</select>
  	
  	<select id="reviewBoardLastArticleno" resultType="int">
  		select articleno from reviewboard order by articleno desc limit 1;
  	</select>
  	
  	<select id="reviewBoardMostLikes" resultType="boardDto">
  		select * from reviewboard order by likes desc limit 4;
  	</select>
  	
  	<select id="findscore" parameterType="String" resultType="map">
  		select rating, count, starscore from attraction_info where content_id = #{content_id}
  	</select>
  	
  	<update id="addscore" parameterType="map">
  		update attraction_info set rating = #{rating}, count = #{count}, starscore = #{score} where content_id = #{content_id}
  	</update>
  	
  	<select id="freeCommentCount" parameterType="String" resultType="int">
  		select COUNT(*) from freecomment where isdelete=0 AND articleno=${articleno};
  	</select>
  	<select id="reviewCommentCount" parameterType="String" resultType="int">
  		select COUNT(*) from reviewcomment where isdelete=0 AND articleno=${articleno};
  	</select>
  	
  	<select id="freeCommentChildren" parameterType="string" resultType="commentDto">
  		select * from freecomment where isdelete=0 AND articleno=${articleno} AND parentcomment IS NOT NULL;
  	</select>
  	<select id="reviewCommentChildren" parameterType="string" resultType="commentDto">
  		select * from reviewcomment where isdelete=0 AND articleno=${articleno} AND parentcomment IS NOT NULL;
  	</select>
  	
  	<insert id="freeCommentChildWrite" parameterType="commentDto">
  		insert into freecomment (articleno, userid, content, parentcomment,depth) values (#{articleno}, #{userid}, #{content}, #{parentcomment}, #{depth});
  	</insert>
  	<insert id="reviewCommentChildWrite" parameterType="commentDto">
  		insert into reviewcomment (articleno, userid, content, parentcomment,depth) values (#{articleno}, #{userid}, #{content}, #{parentcomment}, #{depth});
  	</insert>
  	<select id="freeMaxComment" parameterType="String" resultType="int">
  		select commentno from freecomment where isdelete = 0 AND articleno=${articleno} order by commentno desc limit 1;
  	</select>
  	<select id="reviewMaxComment" parameterType="String" resultType="int">
  		select commentno from reviewcomment where isdelete = 0 AND articleno=${articleno} order by commentno desc limit 1;
  	</select>
</mapper>